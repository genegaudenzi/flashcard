{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { auth } from \"../firebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nexport const useAuth = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser);\n      setLoading(false); // Mark loading as done\n    });\n    return () => unsubscribe();\n  }, []);\n  return {\n    user,\n    loading\n  };\n};\n_s(useAuth, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");","map":{"version":3,"names":["useState","useEffect","auth","onAuthStateChanged","useAuth","_s","user","setUser","loading","setLoading","unsubscribe","currentUser"],"sources":["/home/gene-gaudenzi/flashcard/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { auth } from \"../firebaseConfig\";\nimport { onAuthStateChanged } from \"firebase/auth\";\n\nexport const useAuth = () => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n      setLoading(false); // Mark loading as done\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  return { user, loading };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,QAAQ,mBAAmB;AACxC,SAASC,kBAAkB,QAAQ,eAAe;AAElD,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAGP,kBAAkB,CAACD,IAAI,EAAGS,WAAW,IAAK;MAC5DJ,OAAO,CAACI,WAAW,CAAC;MACpBF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAMC,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEJ,IAAI;IAAEE;EAAQ,CAAC;AAC1B,CAAC;AAACH,EAAA,CAdWD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}