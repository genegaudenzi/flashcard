{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: \"flashcard-60334.firebaseapp.com\",\n  projectId: \"flashcard-60334\",\n  storageBucket: \"flashcard-60334.appspot.com\",\n  messagingSenderId: \"409878544664\",\n  appId: \"1:409878544664:web:cab1d309f82a4fc62ede6d\",\n  measurementId: \"G-P4H2HED4LM\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\nconst googleSignIn = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    console.log(\"Google Sign-In Successful:\", result.user);\n    return {\n      success: true,\n      user: result.user\n    };\n  } catch (error) {\n    console.error(\"Google Sign-In Error:\", error.message);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\n\n// ðŸ”¹ Updated Logout Function to Handle Google Users\nconst logoutUser = async () => {\n  try {\n    const user = auth.currentUser;\n    if (user) {\n      console.log(\"Logging out user:\", user.email);\n    }\n    await signOut(auth);\n    console.log(\"User logged out successfully.\");\n  } catch (error) {\n    console.error(\"Logout Error:\", error.message);\n  }\n};\n\n// Other authentication functions\nconst registerUser = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return {\n      success: true,\n      user: userCredential.user\n    };\n  } catch (error) {\n    console.error(\"Registration Error:\", error.message);\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nconst loginUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return {\n      success: true,\n      user: userCredential.user\n    };\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};\nconst authStateListener = callback => {\n  return onAuthStateChanged(auth, user => {\n    callback(user);\n  });\n};\n\n// Export Firebase instances and functions\nexport { app, auth, db, googleSignIn, registerUser, loginUser, logoutUser, authStateListener };","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","getAnalytics","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","db","googleProvider","googleSignIn","result","console","log","user","success","error","message","logoutUser","currentUser","email","registerUser","password","userCredential","loginUser","authStateListener","callback"],"sources":["/home/gene-gaudenzi/flashcard/frontend/src/firebaseConfig.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { \n  getAuth, \n  signInWithPopup, \n  GoogleAuthProvider, \n  createUserWithEmailAndPassword, \n  signInWithEmailAndPassword, \n  signOut, \n  onAuthStateChanged \n} from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAnalytics } from \"firebase/analytics\";\n\n// Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: \"flashcard-60334.firebaseapp.com\",\n  projectId: \"flashcard-60334\",\n  storageBucket: \"flashcard-60334.appspot.com\",\n  messagingSenderId: \"409878544664\",\n  appId: \"1:409878544664:web:cab1d309f82a4fc62ede6d\",\n  measurementId: \"G-P4H2HED4LM\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\nconst googleProvider = new GoogleAuthProvider();\n\nconst googleSignIn = async () => {\n  try {\n    const result = await signInWithPopup(auth, googleProvider);\n    console.log(\"Google Sign-In Successful:\", result.user);\n    return { success: true, user: result.user };\n  } catch (error) {\n    console.error(\"Google Sign-In Error:\", error.message);\n    return { success: false, error: error.message };\n  }\n};\n\n// ðŸ”¹ Updated Logout Function to Handle Google Users\nconst logoutUser = async () => {\n  try {\n    const user = auth.currentUser;\n    if (user) {\n      console.log(\"Logging out user:\", user.email);\n    }\n\n    await signOut(auth);\n    console.log(\"User logged out successfully.\");\n  } catch (error) {\n    console.error(\"Logout Error:\", error.message);\n  }\n};\n\n// Other authentication functions\nconst registerUser = async (email, password) => {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    return { success: true, user: userCredential.user };\n  } catch (error) {\n    console.error(\"Registration Error:\", error.message);\n    return { success: false, error: error.message };\n  }\n};\n\nconst loginUser = async (email, password) => {\n  try {\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\n    return { success: true, user: userCredential.user };\n  } catch (error) {\n    return { success: false, error: error.message };\n  }\n};\n\nconst authStateListener = (callback) => {\n  return onAuthStateChanged(auth, (user) => {\n    callback(user);\n  });\n};\n\n// Export Firebase instances and functions\nexport { app, auth, db, googleSignIn, registerUser, loginUser, logoutUser, authStateListener };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}